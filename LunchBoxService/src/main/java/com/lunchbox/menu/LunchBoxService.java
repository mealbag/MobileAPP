package com.lunchbox.menu;

import java.sql.SQLException;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class LunchBoxService {

	@Autowired // This means to get the bean called menuRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private MenuRepository menuRepository;
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	//@Autowired
	//private CustomerDAOImpl customerDAOImpl;

	private List<Menu> listMenuBean = Arrays.asList(
			Menu.builder().id(1234).name("Sambar").price(10).ingredients("pappu sambar masala").build(),
			Menu.builder().id(1235).name("idli").price(5).ingredients("rice idli").build(),
			Menu.builder().id(1236).name("vada").price(3).ingredients("masala vada").build()

	);

	public Iterable<Menu> getMenu() {

		// This returns a JSON or XML with the menu
		return menuRepository.findAll();
		// return listMenuBean;
	}

	public Menu searchMenu(String searchStr) {

		// return listMenuBean.stream().filter(m ->
		// m.getName().equals(searchStr)).findFirst().get();

		return menuRepository.findOne(searchStr);
	}

	public void signUpCustomer(Customer customer) {
		//customer.builder().customer_id(123456).build();

		System.out.println("customer" + customer.toString());
		userRepository.save(customer);

		// return listMenuBean.stream().filter(m ->
		// m.getName().equals(searchStr)).findFirst().get();

	}

	public boolean loginUser(String customer, String password) {

		System.out.println("customer" + customer.toString());
		boolean validUser = false;
		try {
			validUser = CustomerDAOImpl.validateUser(customer, password);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		// return listMenuBean.stream().filter(m ->
		// m.getName().equals(searchStr)).findFirst().get();

		return validUser;

	}
}
